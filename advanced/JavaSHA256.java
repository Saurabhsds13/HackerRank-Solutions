package advanced;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/*SHA is an abbreviation for Secure Hash Algorithm. In Java SHA and is one of the most prevalent cryptographic hash functions. A cryptographic hash can be used to create a text signature or data file. Now, SHA is nothing but a cryptographic hash function that takes input as much as 20 bytes long and returns a hexadecimal hash value which is approximately 40 digits in length. The SHA-256 algorithm is capable of producing nearly a unique, non-static 256-bit (i.e., 32-byte) hash value. But the point to remember is that this function is only a one-way function, i.e., the result it produces cannot be decrypted back to its original value.

Now, the latest safe hashing standard after SHA-2 is the SHA-3 which in comparison to SHA-2 provides a unique way of making a unique one-way hash, and can be much faster on some hardware implementations. The SHA3-256 algorithm has a fixed length algorithm of 256-bit in SHA-3 just like it was in SHA-256.

In order to implement SHA-256 algorithm Java provides the MessageDigest class.

*MessageDigest class is used in Java to calculate the value of cryptographic hashing value.
It is provided in the java.security package.

Following are the cryptographic hash functions by MessageDigest Class for obtaining hash value of a text, namely:

SHA-1
MD5
SHA-256
These algorithms are begun in static method called getInstance( ). After selecting an algorithm, digest value is calculated and the results in byte array is returned.

The resulting byte array is converted into its sign-magnitude representation with the help of 'BigInteger' class. After that, the representation is converted into hexadecimal format to get the 'MessageDigest'.*/
// Program in Java for calculating SHA hash value
class JavaSHA256 {

  public static byte[] getSHA(String input) throws NoSuchAlgorithmException {
    // Static getInstance method is called with hashing SHA
    // Make sure you pass "SHA-256" without any spaces
    // and just a '-' in between properly
    MessageDigest md = MessageDigest.getInstance("SHA-256");

    // To caculate message digest of an input
    // digest( ) method is called
    // which returns an array of bytes
    return md.digest(input.getBytes(StandardCharsets.UTF_8));
  }

  public static String toHexString(byte[] hash) {
    StringBuffer stringbuffer = new StringBuffer();
    for (byte b : hash) { // needed to print it in hexadecimal format
      stringbuffer.append(String.format("%02x", b));
    }

    return stringbuffer.toString();
  }

  public static void main(String args[]) {
    try {
      System.out.println(" HashCode Generated by SHA - 256 for : ");
      String s1 = "saurabh";
      System.out.println(" \n " + s1 + " : " + toHexString(getSHA(s1)));
      String s2 = "K1t4fo0V";
      System.out.println(" \n " + s2 + " : " + toHexString(getSHA(s2)));
    } catch (NoSuchAlgorithmException e) { // For specifying wrong message digest algorithms
      System.out.println(" Exception thrown for incorrect algorithm : " + e);
    }
  }
}
